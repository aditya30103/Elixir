{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Aditya%20Arya/OneDrive/Desktop/Hackathon/Elixir/frontend/app/api/why/route.ts"],"sourcesContent":["// import { NextResponse } from \"next/server\";\r\n// import journeyData from \"@/data/journey.json\";\r\n// import { JourneyData, Episode, Event } from \"@/types/journey\";\r\n// import { NextRequest, NextResponse } from 'next/server';\r\n\r\n// export async function POST(req: NextRequest) {\r\n//   try {\r\n//     const { question } = await req.json();\r\n//     console.log(\"✅ [Next.js API] Received question:\", question);\r\n\r\n//     const backendUrl = 'http://127.0.0.1:8000/ask';\r\n//     console.log(\"✅ [Next.js API] Forwarding to backend:\", backendUrl);\r\n\r\n//     const response = await fetch(backendUrl, {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify({ question }),\r\n//     });\r\n\r\n//     console.log(\"✅ [Next.js API] Backend response status:\", response.status);\r\n\r\n//     if (!response.ok) {\r\n//       const errorText = await response.text();\r\n//       console.error(\"❌ [Next.js API] Backend error:\", errorText);\r\n//       throw new Error(`Backend request failed with status ${response.status}`);\r\n//     }\r\n\r\n//     const data = await response.json();\r\n//     console.log(\"✅ [Next.js API] Received data from backend:\", data);\r\n//     return NextResponse.json(data);\r\n\r\n//   } catch (error) {\r\n//     console.error(\"❌ [Next.js API] Error in /api/why:\", error);\r\n//     return NextResponse.json({ error: 'Internal Server Error' }, { status: 500 });\r\n//   }\r\n// }\r\n\r\n// // Cast JSON as JourneyData\r\n// const data: JourneyData = journeyData as JourneyData;\r\n\r\n// export async function POST(req: Request) {\r\n//   try {\r\n//     const { eventId } = await req.json();\r\n\r\n//     let foundEvent: Event | null = null;\r\n//     let parentEpisode: Episode | null = null;\r\n\r\n//     // Search for event inside episodes\r\n//     for (const ep of data.episodes) {\r\n//       const match = ep.granularEvents.find((ev) => ev.eventId === eventId);\r\n//       if (match) {\r\n//         foundEvent = match;\r\n//         parentEpisode = ep;\r\n//         break;\r\n//       }\r\n//     }\r\n\r\n//     if (!foundEvent) {\r\n//       return NextResponse.json(\r\n//         { error: \"Event not found\" },\r\n//         { status: 404 }\r\n//       );\r\n//     }\r\n\r\n//     // For now: return sourceCommunication as the \"why\"\r\n//     return NextResponse.json({\r\n//       eventId,\r\n//       why: foundEvent.sourceCommunication,\r\n//       source: {\r\n//         episodeTitle: parentEpisode?.title,\r\n//         eventTitle: foundEvent.title,\r\n//       },\r\n//     });\r\n//   } catch (err) {\r\n//     if (err instanceof Error) {\r\n//       return NextResponse.json({ error: err.message }, { status: 500 });\r\n//     }\r\n//     return NextResponse.json({ error: \"Unknown error\" }, { status: 500 });\r\n//   }\r\n// }\r\n\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport journeyData from \"@/data/journey.json\";\r\nimport { JourneyData, Episode, Event } from \"@/types/journey\";\r\n\r\n// Cast JSON as JourneyData\r\nconst data: JourneyData = journeyData as JourneyData;\r\n\r\nexport async function POST(req: NextRequest) {\r\n  try {\r\n    const body = await req.json();\r\n\r\n    // --- Logic for the RAG Chatbot ---\r\n    if (body.question) {\r\n      console.log(\"✅ [Next.js API] Received question:\", body.question);\r\n\r\n      const backendUrl = 'http://127.0.0.1:8000/ask';\r\n      console.log(\"✅ [Next.js API] Forwarding to backend:\", backendUrl);\r\n\r\n      const response = await fetch(backendUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ question: body.question }),\r\n      });\r\n\r\n      console.log(\"✅ [Next.js API] Backend response status:\", response.status);\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        console.error(\"❌ [Next.js API] Backend error:\", errorText);\r\n        throw new Error(`Backend request failed with status ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(\"✅ [Next.js API] Received data from backend:\", data);\r\n      return NextResponse.json(data);\r\n    }\r\n\r\n    // --- Original Logic for finding an Event ---\r\n    if (body.eventId) {\r\n      let foundEvent: Event | null = null;\r\n      let parentEpisode: Episode | null = null;\r\n\r\n      for (const ep of data.episodes) {\r\n        const match = ep.granularEvents.find((ev) => ev.eventId === body.eventId);\r\n        if (match) {\r\n          foundEvent = match;\r\n          parentEpisode = ep;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!foundEvent) {\r\n        return NextResponse.json({ error: \"Event not found\" }, { status: 404 });\r\n      }\r\n\r\n      return NextResponse.json({\r\n        eventId: body.eventId,\r\n        why: foundEvent.sourceCommunication,\r\n        source: {\r\n          episodeTitle: parentEpisode?.title,\r\n          eventTitle: foundEvent.title,\r\n        },\r\n      });\r\n    }\r\n\r\n    // If the request body has neither 'question' nor 'eventId'\r\n    return NextResponse.json({ error: \"Invalid request body\" }, { status: 400 });\r\n\r\n  } catch (err) {\r\n    console.error(\"❌ [Next.js API] Error in /api/why:\", err);\r\n    if (err instanceof Error) {\r\n      return NextResponse.json({ error: err.message }, { status: 500 });\r\n    }\r\n    return NextResponse.json({ error: \"Unknown error\" }, { status: 500 });\r\n  }\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}